# Assignment 1
# What were the most attended and least attended protests in the US in the last 5 years?
# How many protests occurred in Washington state?
# How did protests in 2019 compare to 2020, and why?
# What are the biggest reasons people are protesting in the US?
# You will answer all of these questions by completing the code below.
# For each question/prompt, write the necessary code to get the answer.
# For grading, it's important that you store your answers in the variable names listed with each question in `backtics`.
# There are 3 prompts marked `Reflection`. Be sure to write your responses to these questions in the `README.md` file.
# Part 1:Set up -----------------------------------------------------------
# In this section, you will load the CountLove data and necessary packages.
# (1.a) Load the `stringr` package, which you will use later. (1 point)
library(stringr)
# (1.b) Load the data from CountLove by using the following URL: https://countlove.org/data/data.csv
# Save this data into a variable called `protest_data` (1 point)
protest_data <- read.csv('https://countlove.org/data/data.csv')
# Now use View() to open the data set and examine the data.
# Write down all the columns in the dataset (1 point)
Data | Location | Attendees | Event..legacy..see.tags. | Tags | Curated | Source | Total.Articles
# Pick one row in the dataset and write down every value in that row (1 point)
2017-01-16 | Cincinnati, OH | NA | Other (Martin Luther King Jr.) | Civil Rights; For racial justice; Martin Luther King, Jr. | Yes | http://www.cincinnati.com/picture-gallery/news/2017/01/16/mlk-coalition-march-downtown/96636250/ | 1
# (1.c) Use an R function to determine how many protests are in the dataset?
# Save the number of protests in a variable called `num_protests`  (1 point)
num_protests <- nrow(protest_data)
# (1.d) Use an R function to determine how many how many values (also known
# as attributes, features, or rows) have been recorded for each protest?
# Save the number of protests in a variable called `num_features`
num_features <- length(protest_data)
## Part 2: Attendees ------------------------------------------------------
# In this part, you will explore the number of people who participated
# in the protests.
# (2.a) Extract the `Attendees` column into a variable called `num_attendees`  (1 point)
num_attendees <- protest_data$Attendees
# Note: Remember to exclude NA values when using the functions below!
# Use the `help()` function if you don't remember how to ignore NA values
# (2.b) What is the lowest number of attendees?
# Save the number of protests in a variable called `min_attendees` (1 point)
min_attendees <- min(num_attendees, na.rm = TRUE)
# (2.c) What is the highest number of attendees?
# Save the number of protests in a variable called `max_attendees` (1 point)
max_attendees <- max(num_attendees, na.rm = TRUE)
# (2.d) What is the mean number of attendees? `mean_attendees`
# Save the number of protests in a variable called `mean_attendees` (1 point)
mean_attendees <- mean(num_attendees, na.rm = TRUE)
# (2.e) What is the median number of attendees? `median_attendees`
# Save the number of protests in a variable called `median_attendees` (1 point)
median_attendees <- median(num_attendees, na.rm = TRUE)
# (2.f) What is the difference between the mean and median number of attendees?
# Save the number of protests in a variable called `median_attendees` (1 point)
diff_attendees <- mean_attendees - median_attendees
# Why do you think the mean is higher than the median? (1 point)
Protests occur frequently, and though many do not have lots of attendees, a select few attract over 100,000 protestors.
As such, the mean will be skewed by these outliers and will be greater than the median, which is less affected by outliers.
# (2.g) To further assess the distribution of values, you can create a boxplot of the
# number of attendees using the `boxplot()` function.
# You can give the boxplot a y-axis label by using the parameter `ylab` (e.g., `ylab=" Number of Attendees")
# Store the plot in variable called `attendees_distribution`. (1 point)
# Note: Later in the course, we will use more refined and advanced plotting methods!
attendees_distribution <- boxplot(num_attendees, ylab = "Number of Attendees")
## Part 3: Locations ------------------------------------------------------
# In this part, you will explore where protests happened.
# (3.a) Extract the `Location` column into a variable called `locations` (1 point)
locations <- protest_data$Location
# (3.b) How many *unique* locations are in the dataset?
# Save the number of unique locations in a variable called `num_locations` (1 point)
num_locations <- length(unique(locations))
# (3.c) How many protests occurred in Washington State?
# Use a function from the stringr package to detect the letters "WA" and filter to only keep WA locations
# Now calculate the number of protests recorded in Washington
# Save the number of WA locations in a variable called `num_in_wa` (3 points)
num_in_wa <- sum(str_detect(locations, "WA"))
# (3.d) What proportion of protests occurred in Washington?
# Divide the number of protests in Washington by the total number of protests
# Save this proportion in a variable called `prop_in_wa` (1 point)
prop_in_wa <- num_in_wa / num_locations
# (3.e) Now, using the same stringr function and building on the code that you've written above,
# you will write a function `count_protests_in_location()` that will accept
# a location as an argument and then return (not print out) this sentence:
#    "There were [N] protests in [LOCATION]."
#    where N is the number of protests in a given location (5 points)
# Notes:
#    1. Pay careful attention to spaces and punctuation in the sentences.
#    2. You should count the number of locations that *match* the `location'
#       parameter. For example, `Seattle` should be a match for "Seattle, WA".
count_protests_in_location <- function(location) {
n  = sum(str_detect(locations, location))
return(paste("There were ", n, " protests in ", location, ".", sep = ""))
}
# (3.f) Use your function above to compute the number of protests in "Washington, DC"
# Save the resulting message in a variable called `dc_summary` (1 point)
dc_summary <- count_protests_in_location("Washington, DC")
# (3.g) Use your function above to compute the number of protests in "Minneapolis" (1 point)
# # Save the resulting message in a variable called `minneapolis_summary`
minneapolis_summary <- count_protests_in_location("Minneapolis")
# (3.h) Now, use a stringr function to extract the last 2 characters from every location
# and use these 2 characters to create a new vector `states` (2 points)
states <- str_sub(locations, -2)
# (3.i) Create a vector of the unique states in your dataset.
# Save the unique states in a variable called `uniq_states` (1 point)
uniq_states <- unique(toupper(states))
# (3.j) Now, you will create a summary sentence for each state by passing your `uniq_states`
# variable and `count_protests_in_location` function to the `sapply()` function.
# Store all your messages in a variable called `state_summary`  (3 points)
state_summary <- sapply(uniq_states, count_protests_in_location)
# You have applied your function to an entire vector *at once* with `sapply()`.
# This is powerful!
# (3.k) Another way that we can find out how many protests (or records) exist
# for every state is by creating a table with the table() function.
# Create a table of states (and their frequency) by passing your `states` variable to the
# `table()` function and by storing the result in the variable `state_table`. (2 points)
state_table <- table(states)
View(state_table)
View(state_table)
# (3.k) Another way that we can find out how many protests (or records) exist
# for every state is by creating a table with the table() function.
# Create a table of states (and their frequency) by passing your `states` variable to the
# `table()` function and by storing the result in the variable `state_table`. (2 points)
state_table <- table(states)
library("dplyr")
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% arrange(desc(Average.SAT)) %>% slice_head(n = 10)
tab <- table(data.sorted$City)
library("dplyr")
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% arrange(desc(Average.SAT)) %>% slice_head(n = 10)
tab <- table(data.sorted$City)
View(tab)
tab <- table(data.sorted$City, data.sorted$Average.SAT)
View(tab)
library("dplyr")
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% arrange(desc(Average.SAT))
tab <- table(data.sorted$City, data.sorted$Average.SAT)
View(tab)
data <- read.csv("./scores.csv")
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% arrange(desc(Average.SAT))
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(kableExtra)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% arrange(desc(Average.SAT))
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
data.sorted <- data %>% group_by(Average.SAT)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% group_by(Average.SAT)
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
data.sorted <- data %>% group_by(Average.SAT) %>% summarize(Average.SAT = mean(Average.SAT))
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% group_by(Average.SAT) %>% summarize(Average.SAT = mean(Average.SAT))
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
View(data.sorted)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = mean(Average.SAT))
View(data.sorted)
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = mean(Average.SAT, na.omit = T))
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = mean(Average.SAT, na.omit = T))
View(data.sorted)
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = mean(Average.SAT, na.omit = TRUE))
View(data.sorted)
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
?mean
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = mean(Average.SAT, na.rm = TRUE))
View(data.sorted)
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
?mean
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = round(mean(Average.SAT, na.rm = TRUE)))
View(data.sorted)
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
%>% arrange(desc(Average.SAT))
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = round(mean(Average.SAT, na.rm = TRUE)))
%>% arrange(desc(Average.SAT))
View(data.sorted)
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT))
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = round(mean(Average.SAT, na.rm = TRUE))) %>% arrange(desc(Average.SAT))
View(data.sorted)
kable(data.sorted) %>% kable_styling(bootstrap_options = "striped", full_width = F)
data.sorted2 <- data %>% arrange(desc(Average.SAT))
View(data.sorted2)
data.sorted2 <- data %>% arrange(desc(Average.SAT)) %>% slice(1:20)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT)) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(Average.SAT = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT)) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment)
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = round(mean(Average.SAT, na.rm = TRUE))) %>% arrange(desc(Average.SAT))
data.sorted2 <- data %>% arrange(desc(Average.SAT)) %>% slice(1:20)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate("Average SAT" = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT)) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White, "Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic, )
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = round(mean(Average.SAT, na.rm = TRUE))) %>% arrange(desc(Average.SAT))
data.sorted2 <- data %>% arrange(desc(Average SAT)) %>% slice(1:20)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate("Average SAT" = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, Average.SAT)) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White, "Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic, )
data.sorted <- data %>% group_by(City) %>% summarize(Average.SAT = round(mean(Average.SAT, na.rm = TRUE))) %>% arrange(desc(Average.SAT))
data.sorted2 <- data %>% arrange(desc("Average SAT")) %>% slice(1:20)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate("Average SAT" = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White, "Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic, )
data.sorted <- data %>% group_by(City) %>% summarize("Average SAT" = round(mean("Average SAT", na.rm = TRUE))) %>% arrange(desc(Average.SAT))
data.sorted2 <- data %>% arrange(desc("Average SAT")) %>% slice(1:20)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate("Average SAT" = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White, "Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic, )
data.sorted <- data %>% group_by(City) %>% summarize("Average SAT" = round(mean("Average SAT", na.rm = TRUE))) %>% arrange(desc("Average SAT"))
data.sorted2 <- data %>% arrange(desc("Average SAT")) %>% slice(1:20)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White, "Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic, )
data.sorted <- data %>% group_by(City) %>% summarize(`Average SAT` = round(mean(`Average SAT`, na.rm = TRUE))) %>% arrange(desc(`Average SAT`))
data.sorted2 <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
test <- data %>% group_by(City) %>% summarize(`Average SAT` = mean(`Average SAT`))
View(test)
test <- data %>% group_by(City) %>% summarize(`Average SAT` = mean(`Average SAT`, na.rm = TRUE))
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White, "Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic, )
data.sorted <- data %>% group_by(City) %>% summarize(`Average SAT` = round(mean(`Average SAT`, na.rm = TRUE))) %>% arrange(desc(`Average SAT`))
data.sorted2 <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
test <- data %>% group_by(City) %>% summarize(na.omit(`Average SAT` = mean(`Average SAT`, na.rm = TRUE)))
View(test)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
test <- na.omit(test)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White, "Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic, )
data.sorted <- data %>% group_by(City) %>% summarize(`Average SAT` = round(mean(`Average SAT`, na.rm = TRUE))) %>% arrange(desc(`Average SAT`))
data.sorted2 <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
test <- data %>% group_by(City) %>% summarize(`Average SAT` = mean(`Average SAT`, na.rm = TRUE))
test <- na.omit(test)
View(test)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White, "Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic, )
data.sorted <- data %>% group_by(City) %>% summarize(`Average SAT` = round(mean(`Average SAT`, na.rm = TRUE))) %>% arrange(desc(`Average SAT`))
data.sorted2 <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
test <- data %>% group_by(City) %>% summarize(`Average SAT` = mean(`Average SAT`, na.rm = TRUE))
test2 <- na.omit(test)
View(test)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
View(test2)
test <- data %>% group_by(`Average SAT`) %>% slice_max(n = 20)
View(test)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White, "Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic, )
data.sorted <- data %>% group_by(City) %>% summarize(`Average SAT` = round(mean(`Average SAT`, na.rm = TRUE))) %>% arrange(desc(`Average SAT`))
data.sorted2 <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
test <- data %>% group_by(`Average SAT`) %>% slice_max(order_by = `Average SAT`, n = 20)
View(test)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name, "Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White, "Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic, )
data.sorted <- data %>% arrange(desc(`Average SAT`)) %>% group_by(City) %>% slice(1:20)
data.sorted2 <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
test <- data %>% group_by(`Average SAT`) %>% slice_max(order_by = `Average SAT`, n = 20)
View(test)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name,
"Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White,
"Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic)
data.sorted <- data %>% arrange(desc(`Average SAT`)) %>% group_by(City) %>% slice(1:20)
data.sorted2 <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
test <- data %>% group_by(`Average SAT`) %>% slice_max(order_by = `Average SAT`, n = 1)
View(test)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name,
"Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White,
"Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic)
data.sorted <- data %>% arrange(desc(`Average SAT`)) %>% group_by(City) %>% slice(1:20)
data.sorted2 <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
test <- data %>% group_by(City) %>% slice_max(order_by = `Average SAT`, n = 1)
View(test)
View(data.sorted2)
View(data.sorted)
kable(data.sorted2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
#adds a column that consolidates SAT subject scores into a single average
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
#selects relevant columns and renames them to be easily readable
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name,
"Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White,
"Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic)
top.twenty <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
top.each.city <- data %>% group_by(City) %>% slice_max(order_by = `Average SAT`, n = 1)
View(top.twenty)
View(top.each.city)
kable(top.twenty) %>% kable_styling(bootstrap_options = "striped", full_width = F)
test <- data %>% group_by(`Average SAT`) %>% summarize(`` = max)
test <- data %>% group_by(`Average SAT`) %>% slice(n = 20)
View(test)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
#adds a column that consolidates SAT subject scores into a single average
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
#selects relevant columns and renames them to be easily readable
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name,
"Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White,
"Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic)
top.twenty <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
top.each.city <- data %>% group_by(City) %>% slice_max(order_by = `Average SAT`, n = 1)
View(top.twenty)
View(top.each.city)
kable(top.twenty) %>% kable_styling(bootstrap_options = "striped", full_width = F)
test <- data %>% group_by(`Average SAT`) %>% slice(n = 20)
View(test)
test <- data %>% group_by(`Average SAT`) %>% slice(1:20)
View(test)
?slice
test <- data %>% group_by(`Average SAT`) %>% slice_head(1:20)
test <- data %>% group_by(`Average SAT`) %>% slice_head(n = 20)
View(test)
test <- data %>% group_by(`Average SAT`) %>% slice_max(n = 20)
test <- data %>% group_by(`Average SAT`) %>% slice_max(`Average SAT`, n = 20)
library(dplyr)
library(kableExtra)
data <- read.csv("./scores.csv")
#adds a column that consolidates SAT subject scores into a single average
data <- data %>% mutate(`Average SAT` = Average.Score..SAT.Math. +
Average.Score..SAT.Reading. + Average.Score..SAT.Writing.)
#selects relevant columns and renames them to be easily readable
data <- select(data, c(School.Name, City, Student.Enrollment, Percent.Tested,
Percent.White, Percent.Black, Percent.Hispanic, Percent.Asian, "Average SAT")) %>% rename("School Name" = School.Name,
"Student Enrollment" = Student.Enrollment, "Percent Tested" = Percent.Tested, "Percent White" = Percent.White,
"Percent Black" = Percent.Black, "Percent Asian" = Percent.Asian, "Percent Hispanic" = Percent.Hispanic)
top.twenty <- data %>% arrange(desc(`Average SAT`)) %>% slice(1:20)
top.each.city <- data %>% group_by(City) %>% slice_max(order_by = `Average SAT`, n = 1)
kable(top.twenty) %>% kable_styling(bootstrap_options = "striped", full_width = F)
kable(top.each.city) %>% kable_styling(bootstrap_options = "striped", full_width = F)
